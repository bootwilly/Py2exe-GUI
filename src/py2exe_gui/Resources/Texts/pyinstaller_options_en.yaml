options:

  # Options
  - option: "-h, --help"
    description: "show this help message and exit"
    platform: [all]

  - option: "-v, --version"
    description: "Show program version info and exit."
    platform: [all]

  - option: "--distpath DIR"
    description: "Where to put the bundled app (default: ./dist)"
    platform: [all]

  - option: "--workpath WORKPATH"
    description: "Where to put all the temporary work files, .log, .pyz and etc. (default: ./build)"
    platform: [all]

  - option: "-y, --noconfirm"
    description: "Replace output directory (default: SPECPATH/dist/SPECNAME) without asking for confirmation"
    platform: [all]

  - option: "--upx-dir UPX_DIR"
    description: "Path to UPX utility (default: search the execution path)"
    platform: [all]

  - option: "--clean"
    description: "Clean PyInstaller cache and remove temporary files before building."
    platform: [all]

  - option: "--log-level LEVEL"
    description: "Amount of detail in build-time console messages. LEVEL may be one of TRACE, DEBUG, INFO, WARN, DEPRECATION, ERROR, FATAL (default: INFO). Also settable via and overrides the PYI_LOG_LEVEL environment variable."
    platform: [all]


  # What To Generate
  - option: "-D, --onedir"
    description: "Create a one-folder bundle containing an executable (default)"
    platform: [all]

  - option: "-F, --onefile"
    description: "Create a one-file bundled executable."
    platform: [all]

  - option: "--specpath DIR"
    description: "Folder to store the generated spec file (default: current directory)"
    platform: [all]

  - option: "-n NAME, --name NAME"
    description: "Name to assign to the bundled app and spec file (default: first script’s basename)"
    platform: [all]

  - option: "--contents-directory CONTENTS_DIRECTORY"
    description: "For onedir builds only, specify the name of the directory in which all supporting files (i.e. everything except the executable itself) will be placed in. Use “.” to re-enable old onedir layout without contents directory."
    platform: [all]


  # What To Bundle, Where To Search
  - option: "--add-data SOURCE:DEST"
    description: "Additional data files or directories containing data files to be added to the application. The argument value should be in form of “source:dest_dir”, where source is the path to file (or directory) to be collected, dest_dir is the destination directory relative to the top-level application directory, and both paths are separated by a colon (:). To put a file in the top-level application directory, use . as a dest_dir. This option can be used multiple times."
    platform: [all]

  - option: "--add-binary SOURCE:DEST"
    description: "Additional binary files to be added to the executable. See the --add-data option for the format. This option can be used multiple times."
    platform: [all]

  - option: "-p DIR, --paths DIR"
    description: "A path to search for imports (like using PYTHONPATH). Multiple paths are allowed, separated by ':', or use this option multiple times. Equivalent to supplying the pathex argument in the spec file."
    platform: [all]

  - option: "--hidden-import MODULENAME, --hiddenimport MODULENAME"
    description: "Name an import not visible in the code of the script(s). This option can be used multiple times."
    platform: [all]

  - option: "--collect-submodules MODULENAME"
    description: "Collect all submodules from the specified package or module. This option can be used multiple times."
    platform: [all]

  - option: "--collect-data MODULENAME, --collect-datas MODULENAME"
    description: "Collect all data from the specified package or module. This option can be used multiple times."
    platform: [all]

  - option: "--collect-binaries MODULENAME"
    description: "Collect all binaries from the specified package or module. This option can be used multiple times."
    platform: [all]

  - option: "--collect-all MODULENAME"
    description: "Collect all submodules, data files, and binaries from the specified package or module. This option can be used multiple times."
    platform: [all]

  - option: "--copy-metadata PACKAGENAME"
    description: "Copy metadata for the specified package. This option can be used multiple times."
    platform: [all]

  - option: "--recursive-copy-metadata PACKAGENAME"
    description: "Copy metadata for the specified package and all its dependencies. This option can be used multiple times."
    platform: [all]

  - option: "--additional-hooks-dir HOOKSPATH"
    description: "An additional path to search for hooks. This option can be used multiple times."
    platform: [all]

  - option: "--runtime-hook RUNTIME_HOOKS"
    description: "Path to a custom runtime hook file. A runtime hook is code that is bundled with the executable and is executed before any other code or module to set up special features of the runtime environment. This option can be used multiple times."
    platform: [all]

  - option: "--exclude-module EXCLUDES"
    description: "Optional module or package (the Python name, not the path name) that will be ignored (as though it was not found). This option can be used multiple times."
    platform: [all]

  - option: "--splash IMAGE_FILE"
    description: "(EXPERIMENTAL) Add an splash screen with the image IMAGE_FILE to the application. The splash screen can display progress updates while unpacking."
    platform: [all]


  # How To Generate
  - option: "-d {all,imports,bootloader,noarchive}, --debug {all,imports,bootloader,noarchive}"
    description: "Provide assistance with debugging a frozen application. This argument may be provided multiple times to select several of the following options. - all: All three of the following options. - imports: specify the -v option to the underlying Python interpreter, causing it to print a message each time a module is initialized, showing the place (filename or built-in module) from which it is loaded. See https://docs.python.org/3/using/cmdline.html#id4. - bootloader: tell the bootloader to issue progress messages while initializing and starting the bundled app. Used to diagnose problems with missing imports. - noarchive: instead of storing all frozen Python source files as an archive inside the resulting executable, store them as files in the resulting output directory."
    platform: [all]

  - option: "--python-option PYTHON_OPTION"
    description: "Specify a command-line option to pass to the Python interpreter at runtime. Currently supports “v” (equivalent to “–debug imports”), “u”, “W <warning control>”, “X <xoption>”, and “hash_seed=<value>”. For details, see the section “Specifying Python Interpreter Options” in PyInstaller manual."
    platform: [all]

  - option: "-s, --strip"
    description: "Apply a symbol-table strip to the executable and shared libs (not recommended for Windows)"
    platform: [all]

  - option: "--noupx"
    description: "Do not use UPX even if it is available (works differently between Windows and *nix)"
    platform: [all]

  - option: "--upx-exclude FILE"
    description: "Prevent a binary from being compressed when using upx. This is typically used if upx corrupts certain binaries during compression. FILE is the filename of the binary without path. This option can be used multiple times."
    platform: [all]


  # Windows And Mac Os X Specific Options
  - option: "-c, --console, --nowindowed"
    description: "Open a console window for standard i/o (default). On Windows this option has no effect if the first script is a ‘.pyw’ file."
    platform: [Windows, macOS]

  - option: "-w, --windowed, --noconsole"
    description: "Windows and Mac OS X: do not provide a console window for standard i/o. On Mac OS this also triggers building a Mac OS .app bundle. On Windows this option is automatically set if the first script is a ‘.pyw’ file. This option is ignored on *NIX systems."
    platform: [Windows, macOS]

  - option: "-i <FILE.ico or FILE.exe,ID or FILE.icns or Image or \"NONE\">, --icon <FILE.ico or FILE.exe,ID or FILE.icns or Image or \"NONE\">"
    description: "FILE.ico: apply the icon to a Windows executable. FILE.exe,ID: extract the icon with ID from an exe. FILE.icns: apply the icon to the .app bundle on Mac OS. If an image file is entered that isn’t in the platform format (ico on Windows, icns on Mac), PyInstaller tries to use Pillow to translate the icon into the correct format (if Pillow is installed). Use “NONE” to not apply any icon, thereby making the OS show some default (default: apply PyInstaller’s icon). This option can be used multiple times."
    platform: [Windows, macOS]

  - option: "--disable-windowed-traceback"
    description: "Disable traceback dump of unhandled exception in windowed (noconsole) mode (Windows and macOS only), and instead display a message that this feature is disabled."
    platform: [Windows, macOS]


  # Windows Specific Options
  - option: "--version-file FILE"
    description: "Add a version resource from FILE to the exe."
    platform: [Windows]

  - option: "-m <FILE or XML>, --manifest <FILE or XML>"
    description: "Add manifest FILE or XML to the exe."
    platform: [Windows]

  - option: "-r RESOURCE, --resource RESOURCE"
    description: "Add or update a resource to a Windows executable. The RESOURCE is one to four items, FILE[,TYPE[,NAME[,LANGUAGE]]]. FILE can be a data file or an exe/dll. For data files, at least TYPE and NAME must be specified. LANGUAGE defaults to 0 or may be specified as wildcard * to update all resources of the given TYPE and NAME. For exe/dll files, all resources from FILE will be added/updated to the final executable if TYPE, NAME and LANGUAGE are omitted or specified as wildcard *. This option can be used multiple times."
    platform: [Windows]

  - option: "--uac-admin"
    description: "Using this option creates a Manifest that will request elevation upon application start."
    platform: [Windows]

  - option: "--uac-uiaccess"
    description: "Using this option allows an elevated application to work with Remote Desktop."
    platform: [Windows]

  - option: "--hide-console {hide-late,minimize-late,hide-early,minimize-early}"
    description: "Windows only: in console-enabled executable, have bootloader automatically hide or minimize the console window if the program owns the console window (i.e., was not launched from an existing console window)."
    platform: [Windows]


  # Mac Os Specific Options
  - option: "--argv-emulation"
    description: "Enable argv emulation for macOS app bundles. If enabled, the initial open document/URL event is processed by the bootloader and the passed file paths or URLs are appended to sys.argv."
    platform: [macOS]

  - option: "--osx-bundle-identifier BUNDLE_IDENTIFIER"
    description: "Mac OS .app bundle identifier is used as the default unique program name for code signing purposes. The usual form is a hierarchical name in reverse DNS notation. For example: com.mycompany.department.appname (default: first script’s basename)"
    platform: [macOS]

  - option: "--target-architecture ARCH, --target-arch ARCH"
    description: "Target architecture (macOS only; valid values: x86_64, arm64, universal2). Enables switching between universal2 and single-arch version of frozen application (provided python installation supports the target architecture). If not target architecture is not specified, the current running architecture is targeted."
    platform: [macOS]

  - option: "--codesign-identity IDENTITY"
    description: "Code signing identity (macOS only). Use the provided identity to sign collected binaries and generated executable. If signing identity is not provided, ad- hoc signing is performed instead."
    platform: [macOS]

  - option: "--osx-entitlements-file FILENAME"
    description: "Entitlements file to use when code-signing the collected binaries (macOS only)."
    platform: [macOS]


  # Rarely Used Special Options
  - option: "--runtime-tmpdir PATH"
    description: "Where to extract libraries and support files in onefile-mode. If this option is given, the bootloader will ignore any temp-folder location defined by the run-time OS. The _MEIxxxxxx-folder will be created here. Please use this option only if you know what you are doing."
    platform: [all]

  - option: "--bootloader-ignore-signals"
    description: "Tell the bootloader to ignore signals rather than forwarding them to the child process. Useful in situations where for example a supervisor process signals both the bootloader and the child (e.g., via a process group) to avoid signalling the child twice."
    platform: [all]
